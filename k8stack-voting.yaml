apiVersion: v1
kind: Namespace
metadata:
  name: vote
---
apiVersion: v1
kind: Service
metadata:
  name: vote-service
  namespace: vote
  labels:
    app: vote
spec:
  type: NodePort
  selector:
    app: vote
  ports:
  - port: 5000
    targetPort: 80
    nodePort: 31000
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: vote
  labels:
    app: vote
    db: redis
spec:
  type: ClusterIP
  selector:
    app: vote
    db: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: vote
  labels:
    app: result
    db: postgres
spec:
  type: ClusterIP
  selector:
    app: result
    db: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: result-service
  namespace: vote
  labels:
    app: result
spec:
  type: NodePort
  selector:
    app: result
  ports:
  - port: 5001
    targetPort: 80
    nodePort: 31001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  namespace: vote
  labels:
    app: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      containers:
      - name: vote
        image: kodekloud/examplevotingapp_vote:before
        ports:
          - containerPort: 80
            name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: vote
  labels:
    app: vote
    db: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
      db: redis
  template:
    metadata:
      labels:
        app: vote
        db: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
          - containerPort: 6379
            name: redis
        volumeMounts:
          - name: redis-data
            mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: vote
  labels:
    app: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: worker
        image: kodekloud/examplevotingapp_worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: vote
  labels:
    app: result
    db: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
      db: postgres
  template:
    metadata:
      labels:
        app: result
        db: postgres
    spec:
      containers:
      - name: postgresql
        image: postgres:9.4
        env:
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
        ports:
          - containerPort: 5432
            name: postgres
        volumeMounts:
          - name: db-data
            mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-data
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment
  namespace: vote
  labels:
    app: result
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
      - name: result
        image: kodekloud/examplevotingapp_result:before
        ports:
          - containerPort: 80
            name: http